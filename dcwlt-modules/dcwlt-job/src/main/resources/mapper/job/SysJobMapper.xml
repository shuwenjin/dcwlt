<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dcits.dcwlt.job.mapper.SysJobMapper">

	<resultMap type="SysJob" id="SysJobResult">
		<id     property="jobId"          column="job_id"          />
		<result property="fid"            column="fid"             />
		<result property="fjobId"         column="fjob_id"         />
		<result property="failTime"       column="fail_time"       />
		<result property="jobType"        column="job_type"        />
		<result property="jobName"        column="job_name"        />
		<result property="jobGroup"       column="job_group"       />
		<result property="invokeTarget"   column="invoke_target"   />
		<result property="cronExpression" column="cron_expression" />
		<result property="misfirePolicy"  column="misfire_policy"  />
		<result property="concurrent"     column="concurrent"      />
		<result property="status"         column="status"          />
		<result property="retryCron"      column="retry_cron"      />
		<result property="retryStatus"    column="retry_status"    />
		<result property="retryMaxNum"    column="retry_max_num"   />
		<result property="retryJobStatus" column="retry_job_status"/>
		<result property="retryNum"       column="retry_num"       />
		<result property="createBy"       column="create_by"       />
		<result property="createTime"     column="create_time"     />
		<result property="updateBy"       column="update_by"       />
		<result property="updateTime"     column="update_time"     />
		<result property="remark"         column="remark"          />
	</resultMap>
	
	<sql id="selectJobVo">
        select job_id, fid, fjob_id, fail_time, job_type, job_name, job_group, invoke_target, cron_expression, misfire_policy, concurrent, status,
        retry_cron, retry_status, retry_max_num, retry_job_status, retry_num, create_by, create_time, remark
		from sys_job
    </sql>

	<select id="selectJobList" parameterType="SysJob" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		<where>
			<if test="jobType != null and jobType != ''">
				AND job_type = #{jobType}
			</if>
			<if test="jobId != null and jobId != ''">
				AND job_id like concat('%', #{jobId}, '%')
			</if>
			<if test="jobName != null and jobName != ''">
				AND job_name like concat('%', #{jobName}, '%')
			</if>
			<if test="jobGroup != null and jobGroup != ''">
				AND job_group = #{jobGroup}
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="fid != null and fid != ''">
				AND fid = #{fid}
			</if>
			<if test="fjobId != null and fjobId != ''">
				AND fjob_id = #{fjobId}
			</if>
			<if test="retryStatus != null and retryStatus != ''">
				AND retry_status = #{retryStatus}
			</if>
			<if test="retryJobStatus != null and retryJobStatus != ''">
				AND retry_job_status = #{retryJobStatus}
			</if>
			<if test="invokeTarget != null and invokeTarget != ''">
				AND invoke_target like concat('%', #{invokeTarget}, '%')
			</if>
			<if test="fid == null and params.fids != null and params.fids != ''">
				AND fid in
				<foreach collection="params.fids.split(',')" item="fid" open="(" separator="," close=")">
					#{fid}
				</foreach>
			</if>
		</where>
	</select>
	
	<select id="selectJobAll" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		where job_type = '0'
	</select>

	<select id="selectRetryJobAll" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		where job_type = '1'
	</select>
	
	<select id="selectJobById" parameterType="String" resultMap="SysJobResult">
		<include refid="selectJobVo"/>
		where job_id = #{jobId}
	</select>
	
	<delete id="deleteJobById" parameterType="String">
 		delete from sys_job where job_id = #{jobId}
 	</delete>
 	
 	<delete id="deleteJobByIds" parameterType="String">
 		delete from sys_job where job_id in
 		<foreach collection="array" item="jobId" open="(" separator="," close=")">
 			#{jobId}
        </foreach> 
 	</delete>
 	
 	<update id="updateJob" parameterType="SysJob">
 		update sys_job
 		<set>
 			<if test="jobName != null and jobName != ''">job_name = #{jobName},</if>
 			<if test="jobGroup != null and jobGroup != ''">job_group = #{jobGroup},</if>
 			<if test="invokeTarget != null and invokeTarget != ''">invoke_target = #{invokeTarget},</if>
 			<if test="cronExpression != null and cronExpression != ''">cron_expression = #{cronExpression},</if>
 			<if test="misfirePolicy != null and misfirePolicy != ''">misfire_policy = #{misfirePolicy},</if>
 			<if test="concurrent != null and concurrent != ''">concurrent = #{concurrent},</if>
 			<if test="status !=null">status = #{status},</if>
			<if test="retryCron != null and retryCron != ''">retry_cron = #{retryCron},</if>
			<if test="retryStatus != null and retryStatus != ''">retry_status = #{retryStatus},</if>
			<if test="retryMaxNum != null">retry_max_num = #{retryMaxNum},</if>
			<if test="retryJobStatus != null and retryJobStatus != ''">retry_job_status = #{retryJobStatus},</if>
			<if test="retryNum != null">retry_num = #{retryNum},</if>
 			<if test="remark != null and remark != ''">remark = #{remark},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
 		</set>
 		where job_id = #{jobId}
	</update>
 	
 	<insert id="insertJob" parameterType="SysJob" useGeneratedKeys="true" keyProperty="jobId">
 		insert into sys_job(
 			<if test="jobId != null and jobId != ''">job_id,</if>
 			<if test="fid != null and fid != ''">fid,</if>
 			<if test="fjobId != null and fjobId != ''">fjob_id,</if>
			<if test="failTime != null">fail_time,</if>
 			<if test="jobType != null and jobType != ''">job_type,</if>
 			<if test="jobName != null and jobName != ''">job_name,</if>
 			<if test="jobGroup != null and jobGroup != ''">job_group,</if>
 			<if test="invokeTarget != null and invokeTarget != ''">invoke_target,</if>
 			<if test="cronExpression != null and cronExpression != ''">cron_expression,</if>
 			<if test="misfirePolicy != null and misfirePolicy != ''">misfire_policy,</if>
 			<if test="concurrent != null and concurrent != ''">concurrent,</if>
 			<if test="status != null and status != ''">status,</if>
			<if test="retryCron != null and retryCron != ''">retry_cron,</if>
			<if test="retryStatus != null and retryStatus != ''">retry_status,</if>
			<if test="retryMaxNum != null">retry_max_num,</if>
			<if test="retryJobStatus != null and retryJobStatus != ''">retry_job_status,</if>
			<if test="retryNum != null">retry_num,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="jobId != null and jobId != ''">#{jobId},</if>
 			<if test="fid != null and fid != ''">#{fid},</if>
 			<if test="fjobId != null and fjobId != ''">#{fjobId},</if>
			<if test="failTime != null">#{failTime},</if>
 			<if test="jobType != null and jobType != ''">#{jobType},</if>
 			<if test="jobName != null and jobName != ''">#{jobName},</if>
 			<if test="jobGroup != null and jobGroup != ''">#{jobGroup},</if>
 			<if test="invokeTarget != null and invokeTarget != ''">#{invokeTarget},</if>
 			<if test="cronExpression != null and cronExpression != ''">#{cronExpression},</if>
 			<if test="misfirePolicy != null and misfirePolicy != ''">#{misfirePolicy},</if>
 			<if test="concurrent != null and concurrent != ''">#{concurrent},</if>
 			<if test="status != null and status != ''">#{status},</if>
		    <if test="retryCron != null and retryCron != ''">#{retryCron},</if>
		    <if test="retryStatus != null and retryStatus != ''">#{retryStatus},</if>
		    <if test="retryMaxNum != null">#{retryMaxNum},</if>
			<if test="retryJobStatus != null and retryJobStatus != ''">#{retryJobStatus},</if>
		    <if test="retryNum != null">#{retryNum},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
 		)
	</insert>

</mapper> 