<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dcits.dcwlt.pay.batch.mapper.SettleCheckColectMapper">
    <!--对账明细采集表入库-->
    <insert id="insert" parameterType="com.dcits.dcwlt.pay.api.model.CheckCollectDO">
        INSERT INTO PAY_BATCH_CHECKCOLLECT
        (PAYDATE, PAYSERNO, PAYTIME, COREACCTDATE, MSGTYPE, MSGID, BATCHID, PAYFLAG, INSTGDRCTPTY, DBITPARTY,
        PAYERWALLETID, PAYERACCOUNT, CRDTPARTY, PAYEENAME, PAYEEACCOUNT, PAYEEWALLETID, CCY, AMOUNT, OGNLMSGTYPE,
        OGNLMSGID, TRADESTATUS, CORESTATUS, PATHSTATUS, LASTUPDATE, LASTUPTIME)
        VALUES(#{payDate}, #{paySerno}, #{payTime}, #{coreAcctDate}, #{msgType}, #{msgId}, #{batchId}, #{payFlag},
        #{instgDrctPty}, #{dBITParty}, #{payerWalletId}, #{payerAccount}, #{cRDTParty},
        #{payeeName}, #{payeeAccount}, #{payeeWalletId}, #{ccy}, #{amount}, #{ognlMsgType},
        #{ognlMsgId}, #{tradeStatus}, #{coreStatus}, #{pathStatus}, #{lastUpDate}, #{lastUpTime})
    </insert>

    <insert id="insertByBatch">
        INSERT INTO PAY_BATCH_CHECKCOLLECT
        (PAYDATE, PAYSERNO, PAYTIME, COREACCTDATE, MSGTYPE, MSGID, BATCHID, PAYFLAG, INSTGDRCTPTY, DBITPARTY,
        PAYERWALLETID,
        PAYERACCOUNT, CRDTPARTY, PAYEENAME, PAYEEACCOUNT, PAYEEWALLETID, CCY, AMOUNT, OGNLMSGTYPE, OGNLMSGID,
        TRADESTATUS, CORESTATUS, PATHSTATUS, LASTUPDATE, LASTUPTIME)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.payDate}, #{item.paySerno}, #{item.payTime}, #{item.coreAcctDate}, #{item.msgType}, #{item.msgId},
            #{item.batchId}, #{item.payFlag}, #{item.instgDrctPty}, #{item.dBITParty}, #{item.payerWalletId},
            #{item.payerAccount}, #{item.cRDTParty}, #{item.payeeName}, #{item.payeeAccount}, #{item.payeeWalletId},
            #{item.ccy}, #{item.amount}, #{item.ognlMsgType}, #{item.ognlMsgId}, #{item.tradeStatus},
            #{item.coreStatus},
            #{item.pathStatus}, #{item.lastUpDate}, #{item.lastUpTime})
        </foreach>
    </insert>

    <!--对账明细采集表入库使用replace方法-->
    <insert id="replaceIntoBatch" parameterType="com.dcits.dcwlt.pay.api.model.CheckCollectDO">
        REPLACE　INTO PAY_BATCH_CHECKCOLLECT
        (PAYDATE, PAYSERNO, PAYTIME, COREACCTDATE, MSGTYPE, MSGID, BATCHID, PAYFLAG, INSTGDRCTPTY, DBITPARTY,
        PAYERWALLETID, PAYERACCOUNT, CRDTPARTY, PAYEENAME, PAYEEACCOUNT, PAYEEWALLETID, CCY, AMOUNT, OGNLMSGTYPE,
        OGNLMSGID, TRADESTATUS, CORESTATUS, PATHSTATUS, LASTUPDATE, LASTUPTIME)
        VALUES(#{payDate}, #{paySerno}, #{payTime}, #{coreAcctDate}, #{msgType}, #{msgId}, #{batchId}, #{payFlag},
        #{instgDrctPty}, #{dBITParty}, #{payerWalletId}, #{payerAccount}, #{cRDTParty},
        #{payeeName}, #{payeeAccount}, #{payeeWalletId}, #{ccy}, #{amount}, #{ognlMsgType},
        #{ognlMsgId}, #{tradeStatus}, #{coreStatus}, #{pathStatus}, #{lastUpDate}, #{lastUpTime})
    </insert>

    <!-- 查询对账明细采集表 -->
    <select id="selectCheckCollect" resultType="com.dcits.dcwlt.pay.api.model.CheckCollectDO">
        SELECT t.PAYDATE payDate,
        t.PAYSERNO paySerno,
        t.PAYTIME payTime,
        t.COREACCTDATE coreAcctDate,
        t.MSGTYPE msgType,
        t.MSGID msgId,
        t.BATCHID batchId,
        t.PAYFLAG payFlag,
        t.INSTGDRCTPTY instgDrctPty,
        t.DBITPARTY dBITParty,
        t.PAYERWALLETID payerWalletId,
        t.PAYERACCOUNT payerAccount,
        t.CRDTPARTY cRDTParty,
        t.PAYEENAME payeeName,
        t.PAYEEACCOUNT payeeAccount,
        t.PAYEEWALLETID payeeWalletId,
        t.CCY ccy,
        t.AMOUNT amount,
        t.OGNLMSGTYPE ognlMsgType,
        t.OGNLMSGID ognlMsgId,
        t.TRADESTATUS tradeStatus,
        t.CORESTATUS coreStatus,
        t.PATHSTATUS pathStatus,
        t.LASTUPDATE lastUpDate,
        t.LASTUPTIME lastUpTime
        FROM PAY_BATCH_CHECKCOLLECT t
        where t.BATCHID = #{batchId}
    </select>

    <!--查询汇总数据 -->
    <!-- 查询通道对账汇总数据分交易 -->
    <select id="selectCollectSumByMsgType" resultType="com.dcits.dcwlt.pay.api.model.CheckPathDO">
        SELECT
        t.BATCHID batchId,
        t.MSGTYPE msgType,
        t.CCY ccy,
        case when t.TRADESTATUS in ('1', 'A') then 'PR00'
        when t.TRADESTATUS in ('0', '3') then 'PR01'
        else 'PR02'
        end msgBizStatus,
        count(1) msgCountNum,
        sum(convert(t.AMOUNT, DECIMAL)) msgCountAmt,
        count(case when t.PAYFLAG = 'PAYER' then 1 else null end) msgDBITCountNum,
        sum(case when t.PAYFLAG = 'PAYER' then t.AMOUNT else 0 end) msgDBITCountAmt,
        count(case when t.PAYFLAG = 'PAYEE' then 1 else null end) msgCRDTCountNum,
        sum(case when t.PAYFLAG = 'PAYEE' then t.AMOUNT else 0 end) msgCRDTCountAmt
        FROM PAY_BATCH_CHECKCOLLECT t
        where t.BATCHID = #{batchId}
        group by t.BATCHID, t.MSGTYPE, t.CCY, case when t.TRADESTATUS in ('1', 'A') then 'PR00'
        when t.TRADESTATUS in ('0', '3') then 'PR01'
        else 'PR02'
        end
    </select>
    <!-- 查询通道对账汇总所有数据 -->
    <select id="selectCollectSumTotal" resultType="com.dcits.dcwlt.pay.api.model.CheckPathDO">
        SELECT
        t.BATCHID batchId,
        t.CCY ccy,
        count(1) countNum,
        sum(convert(t.AMOUNT, DECIMAL)) countAmt,
        count(case when t.PAYFLAG = 'PAYER' then 1 else null end) dBITCountNum,
        sum(case when t.PAYFLAG = 'PAYER' then t.AMOUNT else 0 end) dBITCountAmt,
        count(case when t.PAYFLAG = 'PAYEE' then 1 else null end) cRDTCountNum,
        sum(case when t.PAYFLAG = 'PAYEE' then t.AMOUNT else 0 end) cRDTCountAmt
        FROM PAY_BATCH_CHECKCOLLECT t
        where t.BATCHID = #{batchId}
        group by t.BATCHID, t.CCY
    </select>

    <!-- 查询金融交易登记表表 -->
    <select id="selectPayTranstionDetailsByMsgId" resultType="com.dcits.dcwlt.pay.api.model.CheckCollectDO">
        SELECT t.PAYDATE payDate,
        t.PAYSERNO paySerno,
        t.PAYTIME payTime,
        t.PAYFLAG payFlag,
        t.MSGTYPE msgType,
        t.TRXSTATUS tradeStatus,
        t.COREPROCSTATUS coreStatus,
        t.COREACCTDATE COREACCTDATE,
        t.PAYPATHSERNO msgId,
        t.PATHPROCSTATUS pathStatus,
        t.BATCHID batchId,
        t.INSTGPTY instgDrctPty,
        t.AMOUNT amount,
        t.CCY ccy,
        t.PAYERPTYID dBITParty,
        t.PAYERACCT payerAccount,
        t.PAYERWALLETID payerWalletId,
        t.PAYEEPTYID CRDTParty,
        t.PAYEEACCT payeeAccount,
        t.PAYEEWALLETID payeeWalletId,
        t.PAYEEWALLETNAME payeeName,
        t.ORIGMSGTYPE ognlMsgType,
        t.ORIGPAYPATHSERNO ognlMsgId,
        t.LASTUPDATE lastUpDate,
        t.LASTUPTIME lastUpTime
        FROM PAY_PAY_TRANSDTL t
        where t.BATCHID = #{batchId}
        and t.PAYPATHSERNO in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>

    </select>

    <select id="selectPayTranstionDetailCount" resultType="int">
        SELECT count(*)
        FROM PAY_PAY_TRANSDTL t
        where t.BATCHID = #{batchId}
        and t.MSGTYPE in ('dcep.221.001.01','dcep.225.001.01','dcep.801.001.01','dcep.227.001.01')
    </select>

    <!-- 查询金融交易登记表表 -->
    <select id="intoFilePayTranstionDetails" resultType="com.dcits.dcwlt.pay.api.model.CheckCollectDO">
        SELECT t.PAYDATE payDate,
        t.PAYSERNO paySerno,
        t.PAYTIME payTime,
        t.COREACCTDATE COREACCTDATE,
        t.MSGTYPE msgType,
        t.PAYPATHSERNO msgId,
        t.BATCHID batchId,
        t.PAYFLAG payFlag,
        t.INSTGPTY instgDrctPty,
        t.PAYERPTYID dBITParty,
        t.PAYERWALLETID payerWalletId,
        t.PAYERACCT payerAccount,
        t.PAYEEPTYID CRDTParty,
        t.PAYEEWALLETNAME payeeName,
        t.PAYEEACCT payeeAccount,
        t.PAYEEWALLETID payeeWalletId,
        t.CCY ccy,
        t.AMOUNT amount,
        t.ORIGMSGTYPE ognlMsgType,
        t.ORIGPAYPATHSERNO ognlMsgId,
        t.TRXSTATUS tradeStatus,
        t.COREPROCSTATUS coreStatus,
        t.PATHPROCSTATUS pathStatus,
        t.LASTUPDATE lastUpDate,
        t.LASTUPTIME lastUpTime
        FROM PAY_PAY_TRANSDTL t
        where t.BATCHID = #{batchId}
        and
        t.MSGTYPE in ('dcep.221.001.01','dcep.225.001.01','dcep.801.001.01','dcep.227.001.01')
        <if test="limit != null">
            <if test="startNum != null">
                and limit #{startNum}, #{limit}
            </if>
            <if test="startNum == null">
                and limit #{limit}
            </if>
        </if>
        into outfile #{fileName}
    </select>
    
    <!-- 查询我行有，人行没有的交易数据总数 -->
    <select id="selectCollectWithPbocNotFoundCount" resultType="int">
        SELECT count(*)
        FROM PAY_BATCH_CHECKCOLLECT t
        left join PAY_BATCH_CHECKPATHDTL b
        on t.BATCHID = b.BATCHID and t.MSGID = b.DTLMSGID
        where t.BATCHID = #{batchId}
        and t.TRADESTATUS != '0' <!-- 当我行失败的情况时（状态为0，3），人行没有也算对平 -->
        and t.TRADESTATUS != '3'
        and b.MSGID is null
    </select>

    <!-- 查询我行有，人行没有的交易数据 -->
    <select id="selectCollectWithPbocNotFound" resultType="com.dcits.dcwlt.pay.api.model.CheckResultDO">
        SELECT t.PAYDATE payDate,
        t.PAYSERNO paySerno,
        t.PAYTIME payTime,
        t.COREACCTDATE coreAcctDate,
        t.MSGTYPE msgType,
        t.MSGID msgId,
        t.BATCHID batchId,
        t.PAYFLAG payFlag,
        t.INSTGDRCTPTY instgDrctPty,
        t.DBITPARTY dBITParty,
        t.PAYERWALLETID payerWalletId,
        t.PAYERACCOUNT payerAccount,
        t.CRDTPARTY cRDTParty,
        t.PAYEENAME payeeName,
        t.PAYEEACCOUNT payeeAccount,
        t.PAYEEWALLETID payeeWalletId,
        t.CCY ccy,
        t.AMOUNT amount,
        t.OGNLMSGTYPE ognlMsgType,
        t.OGNLMSGID ognlMsgId,
        t.TRADESTATUS tradeStatus,
        t.CORESTATUS coreStatus,
        t.PATHSTATUS pathStatus,
        'MORE' checkStatus,
        'INIT' procStatus,
        t.LASTUPDATE lastUpDate,
        t.LASTUPTIME lastUpTime
        FROM PAY_BATCH_CHECKCOLLECT t
        left join PAY_BATCH_CHECKPATHDTL b
        on t.BATCHID = b.BATCHID and t.MSGID = b.DTLMSGID
        where t.BATCHID = #{batchId}
        and t.TRADESTATUS != '0' <!-- 当我行失败的情况时（状态为0，3），人行没有也算对平 -->
        and t.TRADESTATUS != '3'
        and b.MSGID is null
        <if test="limit != null">
            <if test="offset != null">
                limit #{offset}, #{limit}
            </if>
            <if test="offset == null">
                limit #{limit}
            </if>
        </if>
    </select>

    <!-- 查询通道对账明细表中对账异常的数据总数 -->
    <select id="selectPathDetailForNotMatchCount" resultType="int">
        SELECT count(*)
        FROM PAY_BATCH_CHECKCOLLECT t
        inner join PAY_BATCH_CHECKPATHDTL b on t.BATCHID = b.BATCHID and t.MSGID = b.DTLMSGID
        where t.BATCHID = #{batchId}
        and b.CHECKSTATUS != 'INIT'
        and b.CHECKSTATUS != 'SAME'
    </select>

    <!-- 查询通道对账明细表中对账异常的数据 -->
    <select id="selectPathDetailForNotMatch" resultType="com.dcits.dcwlt.pay.api.model.CheckResultDO">
        SELECT t.PAYDATE payDate,
        t.PAYSERNO paySerno,
        t.PAYTIME payTime,
        t.COREACCTDATE coreAcctDate,
        t.MSGTYPE msgType,
        t.MSGID msgId,
        t.BATCHID batchId,
        t.PAYFLAG payFlag,
        t.INSTGDRCTPTY instgDrctPty,
        t.DBITPARTY dBITParty,
        t.PAYERWALLETID payerWalletId,
        t.PAYERACCOUNT payerAccount,
        t.CRDTPARTY cRDTParty,
        t.PAYEENAME payeeName,
        t.PAYEEACCOUNT payeeAccount,
        t.PAYEEWALLETID payeeWalletId,
        t.CCY ccy,
        t.AMOUNT amount,
        t.OGNLMSGTYPE ognlMsgType,
        t.OGNLMSGID ognlMsgId,
        t.TRADESTATUS tradeStatus,
        t.CORESTATUS coreStatus,
        t.PATHSTATUS pathStatus,
        b.CHECKSTATUS checkStatus,
        'INIT' procStatus,
        t.LASTUPDATE lastUpDate,
        t.LASTUPTIME lastUpTime
        FROM PAY_BATCH_CHECKCOLLECT t
        inner join PAY_BATCH_CHECKPATHDTL b on t.BATCHID = b.BATCHID and t.MSGID = b.DTLMSGID
        where t.BATCHID = #{batchId}
        and b.CHECKSTATUS != 'INIT'
        and b.CHECKSTATUS != 'SAME'
        <if test="limit != null">
            <if test="offset != null">
                limit #{offset}, #{limit}
            </if>
            <if test="offset == null">
                limit #{limit}
            </if>
        </if>
    </select>

    <!-- 查询通道对账明细表中对账结果数据 -->
    <select id="selectPathDetailByMsgIdList" resultType="com.dcits.dcwlt.pay.api.model.CheckResultDO">
        SELECT t.PAYDATE payDate,
        t.PAYSERNO paySerno,
        t.PAYTIME payTime,
        t.COREACCTDATE coreAcctDate,
        t.MSGTYPE msgType,
        t.MSGID msgId,
        t.BATCHID batchId,
        t.PAYFLAG payFlag,
        t.INSTGDRCTPTY instgDrctPty,
        t.DBITPARTY dBITParty,
        t.PAYERWALLETID payerWalletId,
        t.PAYERACCOUNT payerAccount,
        t.CRDTPARTY cRDTParty,
        t.PAYEENAME payeeName,
        t.PAYEEACCOUNT payeeAccount,
        t.PAYEEWALLETID payeeWalletId,
        t.CCY ccy,
        t.AMOUNT amount,
        t.OGNLMSGTYPE ognlMsgType,
        t.OGNLMSGID ognlMsgId,
        t.TRADESTATUS tradeStatus,
        t.CORESTATUS coreStatus,
        t.PATHSTATUS pathStatus,
        b.CHECKSTATUS checkStatus,
        'INIT' procStatus,
        t.LASTUPDATE lastUpDate,
        t.LASTUPTIME lastUpTime
        FROM PAY_BATCH_CHECKCOLLECT t
        inner join PAY_BATCH_CHECKPATHDTL b on t.BATCHID = b.BATCHID and t.MSGID = b.DTLMSGID
        where t.BATCHID = #{batchId}
        and t.MSGID in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <insert id="loadFileByBatch">
        load data infile #{fileName} into table pay_batch_checkcollect
               (PAYDATE, PAYSERNO, PAYTIME, COREACCTDATE, MSGTYPE, MSGID, BATCHID, PAYFLAG, INSTGDRCTPTY, DBITPARTY,
                PAYERWALLETID,PAYERACCOUNT, CRDTPARTY, PAYEENAME, PAYEEACCOUNT, PAYEEWALLETID,
                CCY, AMOUNT, OGNLMSGTYPE, OGNLMSGID,TRADESTATUS, CORESTATUS, PATHSTATUS, LASTUPDATE, LASTUPTIME)
    </insert>

</mapper>